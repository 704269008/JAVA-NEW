
<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">

    <title>葡萄藤PPT</title>

    <link rel="stylesheet" href="https://ptteng.github.io/PPT/css/reveal/reveal.css">

    <!-- PPT主题，可以在/css/reveal/theme/中选择其他主题，目前暂时只能使用该模板 -->
    <link rel="stylesheet" href="https://ptteng.github.io/PPT/css/reveal/theme/ptt.css">

    <!-- syntax highlighting 代码高亮主题 -->
    <link rel="stylesheet" href="https://ptteng.github.io/PPT/lib/reveal/css/zenburn.css">

    <!-- 打印和PDF输出样式 -->
    <script>
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        link.href = window.location.search.match( /print-pdf/gi ) ? 'https://ptteng.github.io/PPT/css/reveal/print/pdf.css' : '../css/reveal/print/paper.css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
    </script>
</head>
<body>
<img src="https://ptteng.github.io/PPT/img/demo/logo.png" alt="" usemap="#pttmap" class="base-logo">
<map name="pttmap">
    <area shape="rect" coords="0,0,276,58" href="http://www.jnshu.com" alt="" target="_blank"/>
</map>
<div class="reveal">
    <div class="slides">
        <section>
            <h2>jsp标签和内置对象简介</h2>
			<p></p>
            <h3>java分享会</h3>
            <p>分享人：刘君健</p>
        </section>
        <section>
            <p>1.背景介绍</p>
            <p>2.知识剖析</p>
            <p>3.常见问题</p>
            <p>4.解决方案</p>
            <p>5.编码实战</p>
            <p>6.扩展思考</p>
            <p>7.参考文献</p>
            <p>8.更多讨论</p>
        </section>
        <section>
            <h3>1.背景介绍</h3>
            <p>作为后端程序员，我们后端得到的结果，传到前端的时候，该怎么在前端进行一些处理,然后显示出来</p>
            <p>所以了解一下前端页面的一些简单知识是有必要的</p>
            <p>在这里给大家简单介绍一下jsp标签和内置对象</p>
            <p></p>
            <p></p>
        </section>
        <section>
        	<h2>jsp标签</h2>
        	<p>JSP标准标签库（JSTL）是一个JSP标签集合，它封装了JSP应用的通用核心功能。</p>
        	<p>JSTL支持通用的、结构化的任务，比如迭代，条件判断，XML文档操作，国际化标签，SQL标签。</p>
        	<p>除了这些，它还提供了一个框架来使用集成JSTL的自定义标签。</p>
        	<p>根据JSTL标签所提供的功能，可以将其分为5个类别:</p>
        	<p>核心标签(c标签)、格式化标签</p>
        	<p>SQL 标签、XML 标签、JSTL 函数</p>
        
        </section>
          <section>
        	<h2>jsp隐式对象</h2>
        	<p>JSP隐式对象也被称为预定义变量，或者内置对象</p>
        	<p>JSP隐式对象是JSP容器为每个页面提供的Java对象，开发者可以直接使用它们而不用显式声明。</p>
        	<p>jsp内置对象主要有9个:</p>
        	<p>out、request、response、session、pageContext、application、config、page、exception</p>
        </section>

        <section>
            <h3>2.知识剖析</h3>
        </section>
        <section>
            <p>1）内置对象的简单应用</p>
        </section>
        <section>
        	<p>2）c标签详解</p>
        </section>

        <section>
				<p>3.常见问题</p>
				
		</section>
		<section>
                <p>1)java代码在jsp页面怎么使用</p>
                <p>2)标签的使用方法</p>
        </section>
        <section>
            
            <p>4.解决方案</p>
        </section>
        
        <section>
        	<h2>java代码的使用</h2>
            <P>jsp页面是可以编写java代码的，把java代码用<% %>包起来就行了</P>
            <P>如<% out.println("hello World"); %></P>
            
        </section>

        <section>
        	<h2>标签使用方法</h2>
        	<p>引入biaoqian </p>
            <p><%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %></p>
            <p>标签使用</p>
            <p> < c:out value="java是一门神奇的语言"/></p>
        </section>
         <section>
            <h3>5.编码实战</h3>
        </section>
        
        <section>
            <h3>6.拓展思考</h3>
        </section>
       
       
        <section>
            <h3>7.参考文献</h3>
            <p>http://www.runoob.com/jsp/jsp-jstl.html</p>
            <p>https://www.cnblogs.com/smyhvae/p/4065790.html</p>
        </section>
        <section>
            <h3>8.更多讨论</h3>
            
        </section>
        

        <section>
            <h4>鸣谢</h4>
            <p>感谢观看,如有出错,恳请指正</p>
            <p><small>BY : 刘君健</small></p>
        </section>

    </div>
</div>

<script src="https://ptteng.github.io/PPT/lib/reveal/js/head.min.js"></script>
<script src="https://ptteng.github.io/PPT/lib/reveal/reveal.js"></script>

<script>

    // 以下为常见配置属性的默认值
    // {
    // 	controls: true, // 是否在右下角展示控制条
    // 	progress: true, // 是否显示演示的进度条
    // 	slideNumber: false, // 是否显示当前幻灯片的页数编号，也可以使用代码slideNumber: 'c / t' ，表示当前页/总页数。
    // 	history: false, // 是否将每个幻灯片改变加入到浏览器的历史记录中去
    // 	keyboard: true, // 是否启用键盘快捷键来导航
    // 	overview: true, // 是否启用幻灯片的概览模式，可使用"Esc"或"o"键来切换概览模式
    // 	center: true, // 是否将幻灯片垂直居中
    // 	touch: true, // 是否在触屏设备上启用触摸滑动切换
    // 	loop: false, // 是否循环演示
    // 	rtl: false, // 是否将演示的方向变成RTL，即从右往左
    // 	fragments: true, // 全局开启和关闭碎片。
    // 	autoSlide: 0, // 两个幻灯片之间自动切换的时间间隔（毫秒），当设置成 0 的时候则禁止自动切换，该值可以被幻灯片上的 ` data-autoslide` 属性覆盖
    // 	transition: 'default', // 切换过渡效果，有none/fade/slide/convex/concave/zoom
    // 	transitionSpeed: 'default', // 过渡速度，default/fast/slow
    // 	mouseWheel: true, //是否启用通过鼠标滚轮来切换幻灯片
    // }

    // 初始化幻灯片
    Reveal.initialize({
        history: true,
        dependencies: [
            { src: 'https://ptteng.github.io/PPT/plugin/markdown/marked.js' },
            { src: 'https://ptteng.github.io/PPT/plugin/markdown/markdown.js' },
            { src: 'https://ptteng.github.io/PPT/plugin/notes/notes.js', async: true },
            { src: 'https://ptteng.github.io/PPT/plugin/highlight/highlight.js', async: true, callback: function() { hljs.initHighlightingOnLoad(); } }
        ]
    });
</script>
</body>
</html>